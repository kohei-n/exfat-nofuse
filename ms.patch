index 143b721..7c4d3c2 100644
--- a/exfat_core.c
+++ b/exfat_core.c
@@ -1757,8 +1757,13 @@ void fs_error(struct super_block *sb)
 
	if (opts->errors == EXFAT_ERRORS_PANIC)
		panic("[EXFAT] Filesystem panic from previous error\n");
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
+		else if ((opts->errors == EXFAT_ERRORS_RO) && !(sb->s_flags & SB_RDONLY)) {
+				sb->s_flags |= SB_RDONLY;
+#else
	else if ((opts->errors == EXFAT_ERRORS_RO) && !(sb->s_flags & MS_RDONLY)) {
		sb->s_flags |= MS_RDONLY;
+#endif
		printk(KERN_ERR "[EXFAT] Filesystem has been set read-only\n");
	}
 }
diff --git a/exfat_super.c b/exfat_super.c
index 312de36..cee7508 100644
--- a/exfat_super.c
+++ b/exfat_super.c
@@ -2080,7 +2090,11 @@ static void exfat_write_super(struct super_block *sb)
 
	__set_sb_clean(sb);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
+   if (!(sb->s_flags & SB_RDONLY))
+#else
	if (!(sb->s_flags & MS_RDONLY))
+#endif
		FsSyncVol(sb, 1);
 
	__unlock_super(sb);
@@ -2136,7 +2150,11 @@ static int exfat_statfs(struct dentry *dentry, struct kstatfs *buf)
 
 static int exfat_remount(struct super_block *sb, int *flags, char *data)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
+   *flags |= SB_NODIRATIME;
+#else
	*flags |= MS_NODIRATIME;
+#endif 
	return 0;
 }
 
@@ -2489,7 +2507,11 @@ static int exfat_fill_super(struct super_block *sb, void *data, int silent)
	mutex_init(&sbi->s_lock);
 #endif
	sb->s_fs_info = sbi;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
+   sb->s_flags |= SB_NODIRATIME;
+#else
	sb->s_flags |= MS_NODIRATIME;
+#endif
	sb->s_magic = EXFAT_SUPER_MAGIC;
	sb->s_op = &exfat_sops;
	sb->s_export_op = &exfat_export_ops;
